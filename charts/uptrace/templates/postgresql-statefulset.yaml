{{ if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptrace-postgresql
  labels:
    app: postgresql
    {{- include "uptrace.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  serviceName: uptrace-postgresql
  selector:
    matchLabels:
      app: postgresql
      {{- include "uptrace.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: postgresql
        {{- include "uptrace.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.postgresql.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "uptrace.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: uptrace
            - name: POSTGRES_PASSWORD
              value: uptrace
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
          - name: uptrace-postgresql-data
            mountPath: /var/lib/postgresql
          {{- else }}
          volumeMounts: []
          {{- end }}
          ports:
            - name: tcp
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes: []
{{ if .Values.clickhouse.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: uptrace-postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if not (eq .Values.postgresql.persistence.storageClassName "") }}
      storageClassName: {{ .Values.postgresql.persistence.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}
{{ end }}
{{ end }}
